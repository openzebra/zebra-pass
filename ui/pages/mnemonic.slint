import { CheckBox } from "std-widgets.slint";
import { Theme } from "../theme.slint";
import { Routers } from "../routers.slint";
import { ZTag } from "../components/tag.slint";
import { ZButton } from "../components/button.slint";
import { IconButton } from "../components/icon-btn.slint";
import { ZInput } from "../components/input.slint";
import { KeyChainLogic } from "../logic.slint";
import { MnemonicGenForm } from "../components/mnemonic-gen.slint";


export component MnemonicPage inherits Window {
    private property <bool> accepted : false;

    callback continue(Routers);

    background: Theme.window-background;
    HorizontalLayout {
        VerticalLayout {
            height: Theme.app-height;
            Image {
                source: @image-url("../images/zebra_print.png");
                colorize: Theme.window-background-inverse;
                height: 100%;
                width: Theme.zerba-print-length;
                image-fit: fill;
            }
        }
        VerticalLayout {
            width: Theme.app-width - Theme.zerba-print-length;
            alignment: center;
            HorizontalLayout {
                width: 100%;
                alignment: center;
                padding-bottom: 15pt;
                VerticalLayout {
                    Text {
                        text: @tr("Secret Phrase");
                        font-size: Theme.font-size-medium * 2;
                        font-weight: Theme.font-weight-bold;
                        horizontal-alignment: center;
                    }
                    Text {
                        text: @tr("Remember and backup words in order!!!");
                        font-size: Theme.font-size-medium;
                        font-weight: Theme.font-weight-bold;
                        horizontal-alignment: center;
                    }
                }
            }
            MnemonicGenForm {
                random-words <=> KeyChainLogic.random-words;
            }
            HorizontalLayout {
                width: 100%;
                alignment: center;
                Text {
                    text: @tr("Ensure that you remember all words one by one in order. If you input 'salt,' it will be required to restore your storage. If you forget the order of the words, 'salt,' it is equivalent to losing all your data.");
                    color: Theme.warning;
                    wrap: word-wrap;
                    width: 420pt;
                    font-weight: Theme.font-weight-bold;
                    font-size: Theme.font-size-regular;
                    font-family: Theme.font-family;
                    horizontal-alignment: center;
                }
            }
            HorizontalLayout {
                width: 100%;
                alignment: center;
                VerticalLayout {
                    alignment: center;
                    ZInput {
                        height: 46pt;
                        width: 200pt;
                        alignment: center;
                        placeholder: @tr("Phrase salt (Optional)");
                        label-color: Theme.window-background-inverse.darker(50%);
                        value <=> KeyChainLogic.words-salt;
                    }
                    ZButton {
                        height: 36pt;
                        width: 200pt;
                        color: Theme.window-background;
                        background: Theme.window-background-inverse;
                        text: @tr("Continue");
                        enabled: accepted;
                        clicked => {
                            continue(Routers.SetupAccount)
                        }
                    }
                    CheckBox {
                        text: @tr("I remember and saved backup!");
                        checked <=> accepted;
                        enabled: true;
                    }
                }
            }
        }
    }
}
