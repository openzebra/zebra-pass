export struct LogicResult {
    success: bool,
    response: string,
    error: string
}

export struct ElementItem {
    title: string,
    value: string,
    hide: bool,
    copy: bool
}

export struct Element {
    name: string,
    website: string,
    icon: image,
    type: int,
    created: string,
    updated: string,
    favourite: bool,
    fields: [ElementItem],
    extra_fields: [ElementItem]
}

export struct LogicElementsUpdateResult {
    success: bool,
    response: [Element],
    error: string
}

export global KeyChainLogic {
    in-out property<[[string]]> random_words : [];
    in-out property<string> words_salt : "";
    in-out property<string> password;
    in-out property<string> email;
    in-out property<bool> sync : true;

    // TODO: Move to GeneratorLogic
    pure callback request_random_words(string) -> [[string]];
    pure callback request_create_account() -> LogicResult;
    pure callback request_unlock(string) -> LogicResult;
}

export global SettingsLogic {
    in-out property <string> lang : "ru";
}

export global GeneratorLogic {
    /// params lowercase: bool, upercase: bool, nums: bool, symbols: bool, length: i32
    pure callback request_password_gen(bool, bool, bool, bool, int) -> LogicResult;
}

export global Logic {
    in-out property <[string]> records_types : [
        "Login",
        "Card",
        "Swift",
        "CryptoWallet",
        "Identity",
        "Address",
    ];
    in property <[Element]> elements : [];

    pure callback add_new_element(Element) -> LogicResult;
}
