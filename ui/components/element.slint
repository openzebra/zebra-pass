import { HorizontalBox , Button} from "std-widgets.slint";

import { IconButton } from "../components/icon-btn.slint";
import { ZTag } from "../components/tag.slint";
import { Theme } from "../theme.slint";
import { Element } from "../logic.slint";
import { RecordField } from "field.slint";
import { ZButton } from "button.slint";



export component ElementOfItem inherits VerticalLayout {
    in property <int> index : 0;
    in property <Element> data;

    callback edit(int /* index */);
    callback delete(int /* index */);

    alignment: start;
    padding: 10pt;
    padding-left: 20pt;
    padding-right: 20pt;
    width: Theme.app-width - 245pt;
    popup := PopupWindow {
        close-on-click: false;
        x: Theme.app-width / 2 - 270pt;
        y: Theme.app-height / 2 - 50pt;
        width: 100pt;

        Rectangle {
            background: Theme.window-background;
            border-color: Theme.window-background-inverse;
            border-width: 2pt;
            border-radius: 8pt;
            padding: 16pt;
        }
        VerticalLayout {
            alignment: center;
            padding: 10pt;
            Text {
                text: @tr("Are you sure want to remove this item?");
                horizontal-alignment: center;
                font-family: Theme.font-family;
                font-size: Theme.font-size-medium;
            }
            HorizontalLayout {
                spacing: 5pt;
                padding: 16pt;
                alignment: center;
                ZButton {
                    text: @tr("Yes");
                    background: Theme.window-background;
                    border-color: Theme.warning;
                    color: Theme.warning;
                    color-hover: Theme.danger;
                    border-color-hover: Theme.danger;
                    width: 120pt;
                    height: 30pt;
                    clicked => {
                        delete(index);
                        popup.close();
                    }
                }
                ZButton {
                    text: @tr("Cancel");
                    background: Theme.window-background-inverse;
                    color: Theme.window-background;
                    width: 120pt;
                    height: 30pt;
                    clicked => {
                        popup.close();
                    }
                }
            }
        }
    }
    HorizontalLayout {
        alignment: space-between;
        HorizontalBox {
            IconButton {
                background: Theme.window-background-inverse;
                hover-color: Theme.secondary;
                source: @image-url("../images/edit.svg");
                img-width: 15pt;
                img-height: 15pt;
                text: "edit";
                clicked => {
                    edit(index);
                }
            }
            IconButton {
                background: Theme.window-background-inverse;
                hover-color: Theme.secondary;
                source: @image-url("../images/del.svg");
                img-width: 15pt;
                img-height: 15pt;
                text: "delete";
                clicked => {
                    popup.show();
                }
            }
         }
    }
    VerticalLayout {
        spacing: 5pt;
        padding-top: 15pt;
        HorizontalLayout {
            alignment: center;
            padding-bottom: 10pt;
            Rectangle {
                width: 30pt;
                height: 30pt;
                background: red;
                border-radius: 100pt;
            }
        }
        RecordField {
            height: 40pt;
            background: Theme.primary;
            read-only: true;
            label: @tr("Name");
            value: data.name;
        }
        RecordField {
            height: 40pt;
            background: Theme.primary;
            read-only: true;
            label: @tr("website");
            value: data.website;
        }
    }
    HorizontalLayout {
        padding-top: 10pt;
        padding-bottom: 10pt;
        alignment: center;
        Rectangle {
            height: 1pt;
            width: 70%;
            background: Theme.window-background-inverse.transparentize(50%);
        }
    }
    VerticalLayout {
        spacing: 5pt;
        for field in data.fields : RecordField {
            height: 40pt;
            background: Theme.primary;
            read-only: true;
            label: field.title;
            value: field.value;
            hide: field.hide;
            copy: field.copy;
        }
    }
    if data.extra-fields.length > 0 : HorizontalLayout {
        padding-top: 10pt;
        padding-bottom: 10pt;
        alignment: center;
        Rectangle {
            height: 1pt;
            width: 70%;
            background: Theme.window-background-inverse.transparentize(50%);
        }
    }
    VerticalLayout {
        spacing: 5pt;
        for field in data.extra-fields : RecordField {
            height: 40pt;
            background: Theme.primary;
            read-only: true;
            label: field.title;
            value: field.value;
            hide: field.hide;
            copy: field.copy;
        }
    }
    VerticalLayout {
        padding-top: 10pt;
        HorizontalLayout {
            alignment: end;
            Text {
                text: "Last Modified:";
            }
            Text {
                text: data.updated;
            }
        }
        HorizontalLayout {
            alignment: end;
            Text {
                text: "Created::";
            }
            Text {
                text: data.created;
            }
        }
    }
}

