import { Theme } from "../theme.slint";
import { TopBar } from "../components/topbar.slint";
import { ZSearchInput } from "../components/search.slint";
import { ElementOfItem } from "../components/element.slint";
import { IconButton } from "../components/icon-btn.slint";
import { Logic, Element } from "../logic.slint";
import { StandardButton } from "std-widgets.slint";

export component ItemComponent inherits Rectangle {
    in-out property <Element> data;
    in-out property <bool> selected;

    callback clicked();

    states [
        pressed when root.selected : {
            root.background : Theme.secondary.darker(70%);
            touch.mouse-cursor: default;
        }
    ]

    touch := TouchArea {
        mouse-cursor: pointer;
        clicked => {
            clicked();
        }
    }

    HorizontalLayout {
        padding-left: 30pt;
        spacing: 16pt;
        VerticalLayout {
            alignment: center;
            Image {
                source: data.icon;
                colorize: red;
                height: 20pt;
                width: 20pt;
            }
        }
        VerticalLayout {
            alignment: center;
            Text {
                text: data.name;
                font-family: Theme.font-family;
                font-size: 10pt;
                font-weight: Theme.font-weight-bold;
                color: Theme.window-background-inverse;
            }
            Text {
                text: data.website;
                font-family: Theme.font-family;
                font-size: 8pt;
                font-weight: Theme.font-weight-regular;
                color: Theme.secondary;
                height: 10pt;
            }
        }
    }
}

export component SubPageManage inherits VerticalLayout {
    private property <int> selected-index : 0;

    TopBar {
        title: "Mange";
    }

    popup := PopupWindow {
        x: 40px;
        y: 100px;
        width: min(confirm_popup_layout.preferred-width, root.width - 80px);
        Rectangle {
            background: Theme.window-background;
            border-color: confirm_popup_text.color;
            border-width: 1px;
        }
        confirm_popup_layout := Dialog {
            height:100%; width: 100%;
            confirm_popup_text := Text {
                text: "Some items are not done, are you sure you wish to quit?";
                wrap: word-wrap;
            }
            StandardButton { kind: yes; clicked => {} }
            StandardButton { kind: no; }
        }
    }

    if Logic.elements.length > 0 : HorizontalLayout {
        height: 100%;
        VerticalLayout {
            alignment: start;
            HorizontalLayout {
                padding-top: 10pt;
                padding-bottom: 10pt;
                alignment: center;
                width: 200pt;
                ZSearchInput {
                    width: 150pt;
                }
            }
            for item[index] in Logic.elements: Rectangle {
                ItemComponent {
                    preferred-height: 35pt;
                    preferred-width: 200pt;
                    data: item;
                    selected: selected-index == index;
                    clicked => {
                        selected-index = index;
                    }
                }                
            }
        }
        Rectangle {
            height: 100%;
            width: 1pt;
            background: Theme.secondary.transparentize(70%);
        }
        ElementOfItem {
            data: Logic.elements[selected-index];
        }
    }
    if Logic.elements.length == 0 : HorizontalLayout {
        alignment: center;
        VerticalLayout {
            alignment: center;
            IconButton {
                background: Theme.window-background-inverse;
                hover-color: Theme.secondary;
                source: @image-url("../images/add.svg");
                img-width: 60pt;
                img-height: 60pt;
                clicked => {
                    debug("Add icon cliced");
                    popup.show();
                }
            }
        }
    }
}
